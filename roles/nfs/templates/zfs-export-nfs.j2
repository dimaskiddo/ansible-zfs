#!/bin/bash -e
IS_NUMBER='^[0-9]+$'
TIMESTAMP=$(date +"%Y-%m-%d_%H:%M:%S")

clear
echo "Script Executed: $(date)"
echo ""

echo "--------------------------------------------"
echo "ZFS Dataset Export Tools to NFS"
echo "Email: dimas.restu@student.upi.edu"
echo "--------------------------------------------"


if [ $UID != 0 ]; then
  echo "Administrator Previlege Needed. Please Run This Program As An Administrator/Root User!"
  exit 1
fi
ZFS_EXIST=$(which zfs | wc -l)
if [ $ZFS_EXIST -eq 0 ]; then
  echo "Please Install ZFS (zfs) Command First!"
  exit 1
fi
EXPORTFS_EXIST=$(which exportfs | wc -l)
if [ $EXPORTFS_EXIST -eq 0 ]; then
  echo "Please Install NFS Server Export (exportfs) Command First!"
  exit 1
fi


echo "--------------------------------------------"
echo "Input Existing ZFS Data Root (Without Trailing Slash):"
read ZFS_DATA_ROOT

if [ -z $ZFS_DATA_ROOT ]; then
  echo "Please Input ZFS Data Root First!"
  exit 1
else
  ZFS_DATA_ROOT_CHECK=$(zfs list | grep $ZFS_DATA_ROOT | wc -l)
  if [ $ZFS_DATA_ROOT_CHECK -eq 0 ]; then
    echo "ZFS Data Root Not Found. Please Input The Correct ZFS Data Root First!"
    exit 1
  fi
fi


echo ""
echo "Input ZFS Dataset Start Number:"
read ZFS_DATASET_START_NUMBER

if [ -z $ZFS_DATASET_START_NUMBER ]; then
  echo "Please Input ZFS Dataset Start Number First!"
  exit 1
else
  if ! [[ $ZFS_DATASET_START_NUMBER =~ $IS_NUMBER ]]; then
    echo "ZFS Dataset Start Number Must An Integer!"
    exit 1
  fi
fi


echo ""
echo "Input ZFS Dataset Last Number:"
read ZFS_DATASET_LAST_NUMBER

if [ -z $ZFS_DATASET_LAST_NUMBER ]; then
  echo "Please Input ZFS Dataset Last Number First!"
  exit 1
else
  if ! [[ $ZFS_DATASET_LAST_NUMBER =~ $IS_NUMBER ]]; then
    echo "ZFS Dataset Last Number Must An Integer!"
    exit 1
  else
    if [ $ZFS_DATASET_LAST_NUMBER -lt $ZFS_DATASET_START_NUMBER ]; then
      echo "ZFS Dataset Last Number Must Larger Than Or Equal With ZFS Dataset Start Number!"
      exit 1
    fi
  fi
fi


echo "--------------------------------------------"
echo "Input Allowed Network for NFS (Separated With Commas):"
read NFS_ALLOWED_NETWORK
IFS="," read -r -a NFS_ALLOWED_NETWORK_SPLIT <<< $NFS_ALLOWED_NETWORK


echo ""
echo "Backing-up Exsisting FSTAB Configuration"
cp /etc/fstab /etc/fstab_$TIMESTAMP


echo ""
echo "Backing-up Exsisting NFS Export Configuration"
cp /etc/exports /etc/exports_$TIMESTAMP


echo "--------------------------------------------"
PROCESS_CHECK_STATUS_MENU=true
while [ $PROCESS_CHECK_STATUS_MENU == true ]; do
  read -p "Do You Want To Start The Process Now? [y/n] " yn
  case $yn in
    [Yy]* ) PROCESS_CHECK_STATUS_MENU=false;;
    [Nn]* ) exit 1;;
    * ) echo "Please Answer With Yes (y) Or No (n)."; echo "";;
  esac
done

LOOP=$ZFS_DATASET_START_NUMBER
until [ $LOOP -gt $ZFS_DATASET_LAST_NUMBER ]
do
  ZFS_DATASET_NAME=$(printf "%.3d" "$LOOP")

  echo "- Exporting ZFS Dataset: ${ZFS_DATA_ROOT}/${ZFS_DATASET_NAME}"
  mkdir -p /${ZFS_DATA_ROOT}/${ZFS_DATASET_NAME}
  mount -o defaults /dev/zvol/${ZFS_DATA_ROOT}/${ZFS_DATASET_NAME} /${ZFS_DATA_ROOT}/${ZFS_DATASET_NAME}

  sleep 1
  chown root:root /${ZFS_DATA_ROOT}/${ZFS_DATASET_NAME}
  chmod 777 /${ZFS_DATA_ROOT}/${ZFS_DATASET_NAME}
  echo "/dev/zvol/${ZFS_DATA_ROOT}/${ZFS_DATASET_NAME} /${ZFS_DATA_ROOT}/${ZFS_DATASET_NAME} xfs defaults 0 2" >> /etc/fstab

  NFS_ALLOWED_NETWORK_LOOP=0
  NFS_ALLOWED_NETWORK_LIST=""
  for NFS_ALLOWED_NETWORK_VALUE in "${NFS_ALLOWED_NETWORK_SPLIT[@]}"
  do
    if [ $NFS_ALLOWED_NETWORK_LOOP -eq 0 ]; then
      NFS_ALLOWED_NETWORK_LIST="${NFS_ALLOWED_NETWORK_VALUE}(rw,no_root_squash,no_wdelay,no_subtree_check)"
    else
      NFS_ALLOWED_NETWORK_LIST="${NFS_ALLOWED_NETWORK_LIST} ${NFS_ALLOWED_NETWORK_VALUE}(rw,no_root_squash,no_wdelay,no_subtree_check)"
    fi

    NFS_ALLOWED_NETWORK_LOOP=$(($NFS_ALLOWED_NETWORK_LOOP + 1))
  done
  echo "/${ZFS_DATA_ROOT}/${ZFS_DATASET_NAME} ${NFS_ALLOWED_NETWORK_LIST}" >> /etc/exports

  echo ""

  ISCSI_LUN_NUMBER=$(($ISCSI_LUN_NUMBER+1))
  LOOP=$(($LOOP+1))
done


echo "--------------------------------------------"
echo "Reloading ZFS Mount"
mount -a


echo ""
echo "Reloading NFS Export"
exportfs -ra


echo "--------------------------------------------"
echo ""
echo "Script Finished: $(date)"
exit 0
